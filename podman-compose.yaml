version: "3.9"

networks:
  internal-net:
    driver: bridge

x-environment: &common-env
  SPRING_CLOUD_CONSUL_HOST: consul
  SPRING_CLOUD_CONSUL_PORT: 8500
  MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info
  SERVER_PORT: 8080
  SPRING_CLOUD_CONSUL_DISCOVERY_HEALTH_CHECK_PATH: /actuator/health
  SPRING_CLOUD_CONSUL_DISCOVERY_HEALTH_CHECK_INTERVAL: 10s
  SPRING_CLOUD_CONSUL_DISCOVERY_PREFER_IP_ADDRESS: "true"
  SPRING_CLOUD_CONSUL_DISCOVERY_INSTANCE_ID: ${HOSTNAME:-instance}-${SERVER_PORT}-${random.value} #Hostname dosent resolve
  SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME: ${HOSTNAME//_/-}
  LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: DEBUG #debug

volumes:
  mysql-data:

services:
  front:
    build: frontend
    container_name: front
    ports:
      - "5173:5173"


  consul: #DNS
      image: hashicorp/consul:latest
      container_name: consul
      ports:
        - "8500:8500"   # Web UI and API
        - "8600:8600"
      expose:
        - "8600" #DNS
      cap_add:
        - NET_BIND_SERVICE
      networks:
        - internal-net
      command: "agent -server -bootstrap -ui -client=0.0.0.0 -dns-port=8600 -log-level=debug"


  user-management-service:
    build:
      context: ./microservices/UserManagement
      containerfile: Containerfile
    container_name: user-management-service
    depends_on:
      - consul
      - mysql
    environment:
      <<: *common-env
      SPRING_APPLICATION_NAME: user-management
      SERVICE_URL_DOCUMENT: http://document-management-service:8080
      #DATABASE connection
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/root?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    expose:
      - "8080"
    ports:
      - "8081:8080" #TODO: To delete
    networks:
      - internal-net


  document-management-service:
    build: microservices/documentManagement
    depends_on:
      - consul
    environment:
      <<: *common-env
      SPRING_APPLICATION_NAME: document-management
    expose:
      - "8080"
    networks:
      - internal-net

  nginx:
    build: nginx
    container_name: gateway
    depends_on:
      - consul
      - document-management-service
      - user-management-service
    networks:
      - internal-net
    ports:
      - "8080:80"
    volumes:
      - ./error.html:/usr/share/nginx/html/error.html:ro
    cap_add:
      - NET_BIND_SERVICE

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: root
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306" #TODO: To delete
    networks:
      - internal-net  

